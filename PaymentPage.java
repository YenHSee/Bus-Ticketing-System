/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import control.*;
import da.*;
import domain.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Eric
 */
public class PaymentPage extends javax.swing.JFrame {
    private MaintainPurchase purchaseControl;
   private String host = "jdbc:derby://localhost:1527/FinalYearProject";
    private String user = "nbuser";
    private String password = "nbuser";
    private Connection conn;
    private PreparedStatement stmt;
    private MaintainCustomer customerControl;
    private MaintainPayment paymentControl;
    private String customerID;
 private String purchaseID1;
 private String purchaseID2;
  private String purchaseID3;
 private String purchaseID4;
    /**
     * Creates new form Payment
     */
    public PaymentPage() {
        initComponents();
        purchaseControl=new MaintainPurchase();
        customerControl= new MaintainCustomer();
        paymentControl=new MaintainPayment();
        jPanel1.setEnabled(false);
        jcbCardType.setEnabled(false);
        jtfCardExpiredDate.setEnabled(false);
        jtfCardHolderName.setEnabled(false);
        jtfCardValidateCode.setEnabled(false); 
        
        String p = paymentControl.paymentRecord();
        int i = Integer.parseInt(p.replace("P","0")) + 1;//
        jtfPaymentID1.setText("P" + String.valueOf(i));
        jtfPaymentID1.setEditable(false);
    }
    
    public void getUserID(String userID) {
        jtfCusomerID.setText(userID);
        jtfCusomerID.setEditable(false);
        this.customerID=userID;
         createConnection();
        fillPurchaseID();
    }
    
    private void createConnection() {
        try {
            
            conn = DriverManager.getConnection(host, user, password);
            System.out.println("***TRACE: Connection established.");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
}
    public void fillPurchaseID(){
         String queryStr = "SELECT * FROM purchase where customerID=?";
  
        try
        {
            stmt = conn.prepareStatement(queryStr);
            
            stmt.setString(1, customerID);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next())
            {
            Customer customer=customerControl.selectRecord(rs.getString(2));

           Purchase purchase=new Purchase(rs.getString(1),customer,rs.getDouble(3));
         
           
         Payment payment=paymentControl.selectRecord(rs.getString(1));
         
            if(payment==null){
                jcbPurchaseID.addItem(rs.getString(1));
            }
            }
            
        }catch(SQLException ex) {
             JOptionPane.showMessageDialog(null,ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
       
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfCardHolderName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfCardValidateCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbCardType = new javax.swing.JComboBox<>();
        jtfCardExpiredDate = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jtfCardNumber = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jtfPaymentID1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcbPaymentType = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtfPaymentTime = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jcbPurchaseID = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jtfTotalAmount = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtfCusomerID = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Credit Card");

        jLabel2.setText("Card Type:");

        jLabel3.setText("Card Holder Name:");

        jtfCardHolderName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCardHolderNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Card Expired Date:");

        jtfCardValidateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCardValidateCodeActionPerformed(evt);
            }
        });

        jLabel5.setText("Card Validate Code:");

        jcbCardType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PublicBank", "MayBank", "" }));
        jcbCardType.setSelectedItem(jcbCardType);

        jLabel6.setText("Card Number:");

        jcbCardType.setSelectedItem(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfCardHolderName, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jtfCardValidateCode, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jcbCardType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfCardExpiredDate)
                    .addComponent(jtfCardNumber))
                .addGap(56, 56, 56))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbCardType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfCardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCardHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCardExpiredDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCardValidateCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtfPaymentID1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPaymentID1ActionPerformed(evt);
            }
        });

        jButton2.setText("Payment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Payment");

        jLabel8.setText("Payment ID:");

        jLabel9.setText("Purchase ID:");

        jLabel10.setText("Payment Type:");

        jcbPaymentType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "CreditCard" }));
        jcbPaymentType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbPaymentTypeMouseClicked(evt);
            }
        });
        jcbPaymentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPaymentTypeActionPerformed(evt);
            }
        });

        jLabel11.setText("Payment Date:");

        jLabel12.setText("Payemnt Time:");

        jtfPaymentTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPaymentTimeActionPerformed(evt);
            }
        });

        jcbPurchaseID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbPurchaseIDMouseClicked(evt);
            }
        });
        jcbPurchaseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPurchaseIDActionPerformed(evt);
            }
        });

        jLabel13.setText("Total Amount:");

        jtfTotalAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTotalAmountActionPerformed(evt);
            }
        });

        jLabel14.setText("Customer ID:");

        jtfCusomerID.setText(" ");
        jtfCusomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCusomerIDActionPerformed(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy/MM/dd");

        jtfTotalAmount.setEditable(false);
        jtfCusomerID.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jButton2))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel7)))
                .addContainerGap(172, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addComponent(jLabel14))
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jcbPurchaseID, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbPaymentType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfPaymentTime, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jtfTotalAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jtfCusomerID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jtfPaymentID1)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(56, 56, 56))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPaymentID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbPurchaseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jtfCusomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jtfTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jcbPaymentType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jtfPaymentTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCardHolderNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCardHolderNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCardHolderNameActionPerformed

    private void jtfCardValidateCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCardValidateCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCardValidateCodeActionPerformed

    private void jtfPaymentID1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPaymentID1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPaymentID1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    String paymentID=jtfPaymentID1.getText();
    String purchaseID=String.valueOf(jcbPurchaseID.getSelectedItem());
    String paymentType=String.valueOf(jcbPaymentType.getSelectedItem());
    Date dateFromChooser1 = jDateChooser1.getDate();
    String paymentDate = String.format("%1$tY/%1$tm/%1$td", dateFromChooser1);
    String paymentTime=jtfPaymentTime.getText();
    
    String cardType=String.valueOf(jcbCardType.getSelectedItem());
    String cardHolderName=jtfCardHolderName.getText();
    String cardExpiredDate=jtfCardExpiredDate.getText();
    String cardValidateCode=jtfCardValidateCode.getText();
    String cardNumber = jtfCardNumber.getText();
    String timePattern = "([01]?[0-9]|2[0-3]):[0-5][0-9]";
    Pattern pattern = Pattern.compile(timePattern);
    Matcher matcher = pattern.matcher(paymentTime);
    Pattern patternCardNumber = Pattern.compile("\\d{16}");
    Matcher matcherCardNumber = patternCardNumber.matcher(cardNumber);
    
    
    
        if(matcher.matches()){
            if(paymentType.equals("CreditCard")){
                if(matcherCardNumber.matches()){
                  
                if(cardHolderName.equals("")) {
                    JOptionPane.showMessageDialog(null,"The Credit Card Holder Name Must Be Fill In", "Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(cardExpiredDate.equals("")) {
                    JOptionPane.showMessageDialog(null,"The Credit Card Expired Date Must Be Fill In", "Error",JOptionPane.ERROR_MESSAGE);
                }
                else if(cardValidateCode.equals("")) {
                    JOptionPane.showMessageDialog(null,"The Credit Card Validate Code Must Be Fill In", "Error",JOptionPane.ERROR_MESSAGE);
                } 
            else {
                 Purchase purchase=purchaseControl.selectRecord(purchaseID);
                 Payment payment=new Payment(paymentID,purchase,paymentType,paymentDate,paymentTime,cardNumber,cardType,cardHolderName,cardExpiredDate,cardValidateCode);
                 paymentControl.createRecord(payment); 
                 receipt();
                 Ticket();
                 JOptionPane.showMessageDialog(null,"The Payment Is Made By Credit Card ", "Error",JOptionPane.INFORMATION_MESSAGE);
            } }else {
                    JOptionPane.showMessageDialog(null,"The Credit Card Number Invalid", "Error",JOptionPane.ERROR_MESSAGE);
                }
            }else{
            cardType=null;
            cardHolderName=null;
            cardExpiredDate=null;
            cardValidateCode=null;
            Purchase purchase=purchaseControl.selectRecord(purchaseID);
            Payment payment=new Payment(paymentID,purchase,paymentType,paymentDate,paymentTime,cardNumber,cardType,cardHolderName,cardExpiredDate,cardValidateCode);
            paymentControl.createRecord(payment);
            JOptionPane.showMessageDialog(null,"The Payment Is Made By Cash ", "Error",JOptionPane.INFORMATION_MESSAGE);
           receipt();
           Ticket();
            }
    
        }else{
            JOptionPane.showMessageDialog(null,"Time Invalid. eg. 01:00 or 13:00 ", "Duplicate Record",JOptionPane.ERROR_MESSAGE);           
    }
        
        MainPage mainPage = new MainPage();
        mainPage.setVisible(true);
        this.dispose();
        
    
    /*   if(matcher.matches()){
        if(paymentType.equals("CreditCard"))
          if(matcherCardNumber.matches())
            if(cardHolderName.equals("")){
                JOptionPane.showMessageDialog(null,"The Credit Card Holder Name Must Be Fill In", "Error",JOptionPane.ERROR_MESSAGE);
            }else if(cardExpiredDate.equals("")){
                  JOptionPane.showMessageDialog(null,"The Credit Card Expired Date Must Be Fill In", "Error",JOptionPane.ERROR_MESSAGE);
            }else if(cardValidateCode.equals("")){
                  JOptionPane.showMessageDialog(null,"The Credit Card Validate Code Must Be Fill In", "Error",JOptionPane.ERROR_MESSAGE);
            }else{
                 Purchase purchase=purchaseControl.selectRecord(purchaseID);
                Payment payment=new Payment(paymentID,purchase,paymentType,paymentDate,paymentTime,cardNumber,cardType,cardHolderName,cardExpiredDate,cardValidateCode);
                        paymentControl.createRecord(payment);}
            else{
                  JOptionPane.showMessageDialog(null,"Credit Card Numbe Invalid", "Error",JOptionPane.ERROR_MESSAGE);  
                    }
        else{
            JOptionPane.showMessageDialog(null,"Time Invalid. eg. 01:00 or 13:00 ", "Duplicate Record",JOptionPane.ERROR_MESSAGE);           
            }
        }else {
        cardType=null;
        cardHolderName=null;
        cardExpiredDate=null;
        cardValidateCode=null;
        Purchase purchase=purchaseControl.selectRecord(purchaseID);
            Payment payment=new Payment(paymentID,purchase,paymentType,paymentDate,paymentTime,cardNumber,cardType,cardHolderName,cardExpiredDate,cardValidateCode);
                    paymentControl.createRecord(payment);}
        JOptionPane.showMessageDialog(null,"The Payment Is Made ", "Error",JOptionPane.INFORMATION_MESSAGE);
    
    */
    
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jtfPaymentTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPaymentTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPaymentTimeActionPerformed

    private void jtfTotalAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTotalAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTotalAmountActionPerformed

    private void jtfCusomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCusomerIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCusomerIDActionPerformed

    private void jcbPurchaseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPurchaseIDActionPerformed
      
       
    }//GEN-LAST:event_jcbPurchaseIDActionPerformed

    private void jcbPurchaseIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbPurchaseIDMouseClicked
      String w=String.valueOf(jcbPurchaseID.getSelectedItem());
      
      Purchase purchase=purchaseControl.selectRecord(w);
      
      jtfCusomerID.setText(purchase.getCustomer().getCustomerID());
      jtfTotalAmount.setText(String.format("RM %.2f",purchase.getTotalTicketPrice()));
    }//GEN-LAST:event_jcbPurchaseIDMouseClicked

    private void jcbPaymentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPaymentTypeActionPerformed
         String w=String.valueOf(jcbPaymentType.getSelectedItem());
         
         if(w.equals("CreditCard")){
             jPanel1.setEnabled(true);
        jcbCardType.setEnabled(true);
        jtfCardExpiredDate.setEnabled(true);
        jtfCardHolderName.setEnabled(true);
        jtfCardValidateCode.setEnabled(true);
        
         }else{
              jPanel1.setEnabled(false);
              
        jcbCardType.setEnabled(false);
        jcbCardType.setSelectedItem(null);
        jtfCardHolderName.setText("");
        jtfCardValidateCode.setText("");
        jtfCardExpiredDate.setText("");
        jtfCardExpiredDate.setEnabled(false);
        jtfCardHolderName.setEnabled(false);
        jtfCardValidateCode.setEnabled(false);
         }
    }//GEN-LAST:event_jcbPaymentTypeActionPerformed

    private void jcbPaymentTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbPaymentTypeMouseClicked
      
    }//GEN-LAST:event_jcbPaymentTypeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentPage().setVisible(true);
            }
        });
    }
public void Ticket(){
          try    {
                   String queryStr1="select * from payment";
        int i=1;
        try
        {
            stmt = conn.prepareStatement(queryStr1);
            
            
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next())
            {
                purchaseID2 = rs.getString(2);
            }
           
            
                          
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }  
              String sql1="Select c.TICKETNO,a.busNumber, b.staffname,d.seatNumber, d.ticketPrice, a.departurePoint,a.destinationPoint,a.departuredATE,a.departuretime from schedule a, purchaseticket c, staff b,ticket d where b.STAFFID=a.STAFFID and d.TICKETNO=c.TICKETNO and d.SCHEDULEID=a.SCHEDULEID and c.purchaseID='"+purchaseID2+"'";
                  try
        {
            stmt = conn.prepareStatement(sql1);
            
            
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next())
            {
                String ID = rs.getString(2);
                
            }
           
            
                          
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
                  
              JasperDesign jd=JRXmlLoader.load("C:\\Users\\Eric\\Desktop\\MostNew\\project\\FinalYearProject\\src\\ui\\TicketGenerate1.jrxml");
              String sql="Select c.TICKETNO,a.busNumber,d.seatNumber, d.ticketPrice, a.departurePoint,a.destinationPoint,a.departuredATE,a.departuretime from schedule a, purchaseticket c, staff b,ticket d where b.STAFFID=a.STAFFID and d.TICKETNO=c.TICKETNO and d.SCHEDULEID=a.SCHEDULEID and c.PURCHASEID= '"+purchaseID2+"'";
              
              
              JRDesignQuery newQ=new JRDesignQuery();
         newQ.setText(sql);
         jd.setQuery(newQ);
         
         JasperReport jq=JasperCompileManager.compileReport(jd);
         JasperPrint sd=JasperFillManager.fillReport(jq, null, conn);
         JasperViewer.viewReport(sd,false);
              
                  
              
             } catch (JRException jrex) {
            JOptionPane.showMessageDialog(this, "error in generating report");
  	      jrex.printStackTrace();
      }    catch(Exception ex) {
            JOptionPane.showMessageDialog(this, "Unble to generate report~!");
	      ex.printStackTrace();
      }
}
public void receipt(){
           try{
             String queryStr1="select * from payment";
        
        try
        {
            stmt = conn.prepareStatement(queryStr1);
            
            
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next())
            {
                purchaseID3 = rs.getString(2);
            }
           
            
                          
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null,ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }  
         JasperDesign jd=JRXmlLoader.load("C:\\Users\\Eric\\Desktop\\Tunku Abdul Rahman University College\\year2sem3\\24.3.2016\\FinalYearProject\\src\\ui\\receipt.jrxml");
         String sql="select d.TICKETNO, a.PAYMENTDATE,a.PAYMENTTIME,a.PAYMENTTYPE,d.TICKETPRICE from payment a,purchase b,purchaseTicket c,Ticket d where a.PURCHASEID=b.PURCHASEID and b.PURCHASEID=c.PURCHASEID and d.TICKETNO=c.TICKETNO and c.PURCHASEID='"+purchaseID3+"'";
         
         JRDesignQuery newQ=new JRDesignQuery();
         newQ.setText(sql);
         jd.setQuery(newQ);
         
         JasperReport jq=JasperCompileManager.compileReport(jd);
         JasperPrint sd=JasperFillManager.fillReport(jq, null, conn);
         JasperViewer.viewReport(sd,false);
        }catch(JRException jrex){
         JOptionPane.showMessageDialog(this, jrex.getMessage());
         jrex.printStackTrace();
     }  
           
}                                       


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> jcbCardType;
    private javax.swing.JComboBox<String> jcbPaymentType;
    private javax.swing.JComboBox<String> jcbPurchaseID;
    private javax.swing.JTextField jtfCardExpiredDate;
    private javax.swing.JTextField jtfCardHolderName;
    private javax.swing.JTextField jtfCardNumber;
    private javax.swing.JTextField jtfCardValidateCode;
    private javax.swing.JTextField jtfCusomerID;
    private javax.swing.JTextField jtfPaymentID1;
    private javax.swing.JTextField jtfPaymentTime;
    private javax.swing.JTextField jtfTotalAmount;
    // End of variables declaration//GEN-END:variables
}
